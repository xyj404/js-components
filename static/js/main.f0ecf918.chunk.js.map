{"version":3,"sources":["components/baseTable/index.js","components/linkButton/index.js","components/tableList/SearchItem.js","components/tableList/index.js","pages/testBaseTable/index.js","App.js","serviceWorker.js","index.js"],"names":["BaseTable","getList","params2","params","pagination","reloadState","columns","props","useState","dataSource","setDataSource","total","setTotal","loading","setLoading","filters","sorter","column","order","field","columnKey","extra","currentDataSource","setParams","wrappedGetList","useCallback","preParams2","useRef","useEffect","JSON","stringify","current","then","list","length","finally","className","rowKey","record","Object","keys","find","key","match","onChange","map","option","render","onClick","e","preventDefault","children","getFieldDecorator","form","search","dataIndex","title","colProps","formItemProps","options","MyCol","sm","span","md","FormItem","label","placeholder","styled","Item","useForm","action","reloadList","tableProps","expand","setExpand","setReloadState","reload","values","listParams","setListParams","baseTableParams","useMemo","searchColumns","forEach","index","searchIndex","push","ExpandBtns","type","justify","align","style","lineHeight","whiteSpace","MarginButton","resetFields","layout","onSubmit","searchOptions","SearchItem","_","splice","ListActions","scroll","x","filter","Wrap","axios","get","page","data","relod","div","App","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0ecf918.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { Table } from 'antd';\n\nconst BaseTable = function({\n  getList,\n  params: params2,\n  pagination,\n  reloadState,\n  columns = [],\n  ...props\n}) {\n  const [dataSource, setDataSource] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [params, setParams] = useState({\n    pagination: {},\n    filters: {},\n    sorter: {\n      column: {},\n      order: 'descend',\n      field: '',\n      columnKey: ''\n    },\n    extra: {\n      currentDataSource: []\n    }\n  });\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const wrappedGetList = useCallback(params => getList(params), []);\n  const preParams2 = useRef(params2);\n  useEffect(() => {\n    setLoading(true);\n    if (JSON.stringify(preParams2.current) !== JSON.stringify(params2)) {\n      preParams2.current = params2;\n      return setParams({\n        ...params,\n        pagination: { ...params.pagination, current: 1 }\n      });\n    }\n    wrappedGetList({ ...params, params: { ...(params2 || {}) } })\n      .then(({ list, total = list.length }) => {\n        setDataSource(list);\n        setTotal(total);\n      })\n      .finally(() => setLoading(false));\n  }, [params, params2, wrappedGetList, reloadState]);\n  return (\n    <Table\n      className={'baseTable'}\n      rowKey={(record) =>\n        record[Object.keys(record).find(key => !!key.match(/id/i)) || '']\n      }\n      loading={loading}\n      dataSource={dataSource}\n      pagination={\n        pagination !== false\n          ? {\n              ...params.pagination,\n              total,\n              ...pagination\n            }\n          : false\n      }\n      onChange={(pagination, filters, sorter, extra) =>\n        setParams({ pagination, filters, sorter, extra })\n      }\n      columns={columns.map(option => ({\n        ...option,\n        render: (...arg) =>\n          option.render ? (option.render)(...arg) : arg[0] || '-'\n      }))}\n      {...props}\n    />\n  );\n};\n\nexport default BaseTable;\n","import React from 'react';\n\nexport default (props) => (\n  <a\n    onClick={e => e.preventDefault()}\n    className={'ant-dropdown-link'}\n    {...props}>\n    {props.children}\n  </a>\n);\n","import { Col, Form, Input } from 'antd';\nimport React from 'react';\nimport styled from 'styled-components';\n\nexport default function({\n  form: { getFieldDecorator },\n  search,\n  dataIndex,\n  title,\n  colProps,\n  formItemProps,\n  options\n}) {\n  return (\n    <MyCol sm={{ span: 24 }} md={{ span: 8 }} {...colProps}>\n      <FormItem label={title} {...formItemProps}>\n        {search &&\n          dataIndex &&\n          getFieldDecorator(dataIndex, options)(\n            search === true ? <Input placeholder={`请输入${title}`} /> : search\n          )}\n      </FormItem>\n    </MyCol>\n  );\n}\n\nexport const MyCol = styled(Col)`\n  && {\n    .ant-form-item {\n      margin-bottom: 24px;\n    }\n    &:nth-child(1) {\n      .ant-form-item {\n        margin-right: 24px;\n      }\n    }\n    &:nth-child(2) {\n      .ant-form-item {\n        margin-left: 24px;\n        margin-right: 24px;\n      }\n    }\n    &:nth-child(3) {\n      .ant-form-item {\n        margin-left: 24px;\n        margin-right: 0;\n      }\n    }\n    .expand.ant-form-item {\n      margin-right: 0;\n    }\n    @media (max-width: 1200px) {\n      &:nth-child(2) {\n        .ant-form-item {\n          margin-left: 12px;\n        }\n      }\n      &:nth-child(3) {\n        .ant-form-item {\n          margin-left: 12px;\n        }\n      }\n    }\n    @media (max-width: 1000px) {\n      &:nth-child(2) {\n        .ant-form-item {\n          margin-left: 4px;\n        }\n      }\n      &:nth-child(3) {\n        .ant-form-item {\n          margin-left: 4px;\n        }\n      }\n    }\n    @media (max-width: 768px) {\n      .ant-form-item {\n        margin-right: 8px !important;\n        margin-left: 0 !important;\n      }\n    }\n  }\n`;\nconst FormItem = styled(Form.Item)`\n  &&& {\n    display: flex;\n    .ant-form-item-control-wrapper {\n      flex: 1;\n    }\n    .ant-form-item-label,\n    .ant-form-item-control {\n      line-height: 32px;\n    }\n    .ant-form-item-label {\n      width: auto;\n      padding-right: 8px;\n    }\n    .ant-form-item-children > * {\n      width: 100%;\n    }\n  }\n`;\n","import React, { useMemo, useState, useCallback } from 'react';\nimport { Form, Row, Button, Icon } from 'antd';\nimport useForm from 'rc-form-hooks';\nimport styled from 'styled-components';\nimport BaseTable from '../baseTable';\nimport LinkButton from '../linkButton';\nimport SearchItem, { MyCol } from './SearchItem';\n\n  // columns的类型\n    // search?: true | React.ReactElement;\n    // colProps?: ColProps;\n    // dataIndex?: keyof D;\n    // formItemProps?: FormItemProps;\n    // searchIndex?: keyof P | (keyof P)[];\n    // searchOptions?: GetFieldDecoratorOptions<P>;\nexport default function({\n  columns = [],\n  getList,    // ({params, pagination, filters, sorter, extra}) => Promise<{ list: D[]; total?: number }>\n  form = useForm(),  // control filter form\n  extra,\n  action,\n  reloadList,\n  ...tableProps\n}) {\n  const [expand, setExpand] = useState(false);\n\n  const [reloadState, setReloadState] = useState(false);\n  const reload = useCallback(() => {\n    setReloadState(!reloadState);\n  }, [reloadState]);\n  if (reloadList) {\n    reloadList(reload);\n  }\n\n  const [listParams, setListParams] = useState(\n    form.values\n  );\n  const baseTableParams = useMemo(\n    () => ({ ...listParams, ...tableProps.params }),\n    [listParams, tableProps.params]\n  );\n\n  const searchColumns = [];\n  columns.forEach(({ search, dataIndex, searchIndex }, index) => {\n    if (search) {\n      searchColumns.push({\n        ...columns[index],\n        dataIndex: (searchIndex) || dataIndex\n      });\n    }\n  });\n\n  const ExpandBtns = (\n    <MyCol sm={{ span: 24 }} md={{ span: 8 }}>\n      <FormItem className={'expand'}>\n        <Row\n          type={'flex'}\n          justify={expand ? 'end' : 'start'}\n          align={'middle'}\n          style={{\n            lineHeight: '32px',\n            whiteSpace: 'nowrap'\n          }}>\n          <Button\n            type={'primary'}\n            onClick={() => {\n              setListParams(form.values);\n              // reloadList();\n            }}>\n            查询\n          </Button>\n          <MarginButton\n            onClick={() => {\n              form.resetFields();\n              setListParams({});\n            }}>\n            重置\n          </MarginButton>\n          {searchColumns.length >= 3 && (\n            <LinkButton\n              onClick={e => {\n                e.preventDefault();\n                setExpand(!expand);\n              }}>\n              {expand ? '收起' : '展开'} <Icon type={expand ? 'up' : 'down'} />\n            </LinkButton>\n          )}\n        </Row>\n      </FormItem>\n    </MyCol>\n  );\n\n  return (\n    <>\n      {!!searchColumns.length && (\n        <Form\n          layout={'inline'}\n          onSubmit={e => {\n            e.preventDefault();\n            setListParams(form.values);\n            // reloadList();\n          }}>\n          <Row>\n            {searchColumns.map(\n              (\n                {\n                  colProps,\n                  title,\n                  search,\n                  dataIndex,\n                  formItemProps,\n                  searchOptions\n                },\n                index\n              ) =>\n                index < 2 && (\n                  <SearchItem\n                    key={dataIndex}\n                    search={search}\n                    colProps={colProps}\n                    title={title}\n                    dataIndex={dataIndex}\n                    form={form}\n                    formItemProps={formItemProps}\n                    options={searchOptions}\n                  />\n                )\n            )}\n            {expand\n              ? searchColumns[2] && (\n                  <SearchItem\n                    key={searchColumns[2].dataIndex}\n                    search={searchColumns[2].search}\n                    colProps={searchColumns[2].colProps}\n                    title={searchColumns[2].title}\n                    dataIndex={searchColumns[2].dataIndex}\n                    formItemProps={searchColumns[2].formItemProps}\n                    form={form}\n                    options={searchColumns[2].searchOptions}\n                  />\n                )\n              : ExpandBtns}\n          </Row>\n          {expand &&\n            searchColumns.map(\n              (_, index) =>\n                !(index % 3) &&\n                index > 2 && (\n                  <Row key={index}>\n                    {[...searchColumns]\n                      .splice(index, 3)\n                      .map(\n                        ({\n                          colProps,\n                          title,\n                          search,\n                          dataIndex,\n                          formItemProps,\n                          searchOptions\n                        }) => (\n                          <SearchItem\n                            key={dataIndex}\n                            search={search}\n                            colProps={colProps}\n                            title={title}\n                            dataIndex={dataIndex}\n                            form={form}\n                            formItemProps={formItemProps}\n                            options={searchOptions}\n                          />\n                        )\n                      )}\n                  </Row>\n                )\n            )}\n          {expand && (\n            <Row type={'flex'} justify={'end'}>\n              {ExpandBtns}\n            </Row>\n          )}\n        </Form>\n      )}\n      {action && <ListActions type={'flex'}>{action}</ListActions>}\n      {extra && (\n        <>\n          {extra}\n          <br />\n          <br />\n        </>\n      )}\n      <BaseTable\n        scroll={{ x: 780 }}\n        {...tableProps}\n        columns={columns.filter(\n          ({ searchIndex, title }) => !searchIndex && title\n        )}\n        reloadState={reloadState}\n        getList={getList}\n        params={baseTableParams}\n      />\n    </>\n  );\n}\n\nconst FormItem = styled(Form.Item)`\n  &&& {\n    display: flex;\n    margin-bottom: 24px;\n    .ant-form-item-control-wrapper {\n      flex: 1;\n    }\n  }\n`;\nconst MarginButton = styled(Button)`\n  margin: 0 8px;\n`;\nconst ListActions = styled(Row)`\n  > * {\n    margin-bottom: 16px;\n    margin-right: 8px;\n  }\n`;\n\nexport * from '../baseTable';\n","import React, { useRef } from 'react'\nimport { Button } from 'antd'\nimport TableList from '@components/tableList'\nimport axios from 'axios'\nimport styled from 'styled-components'\n\nexport default () => {\n  const columns = [\n    {\n      title: '标题',\n      dataIndex: 'title',\n      search: true,\n    },\n    {\n      title: '额外的搜索',\n      searchIndex: 'other',\n      search: true,\n    },\n    {\n      title: '内容',\n      dataIndex: 'content',\n    },\n    {\n      title: '状态',\n      dataIndex: 'state',\n    },\n    {\n      title: '开始时间',\n      dataIndex: 'createdAt',\n      search: true\n    },\n    {\n      title: '更新时间',\n      dataIndex: 'updatedAt',\n      search: true\n    }\n  ]\n\n  const reloadList = useRef()\n\n  return (\n    <Wrap>\n      <TableList\n        columns={columns}\n        getList={({ params, pagination: { current } }) =>\n          axios\n            .get('https://yapi.parsec.com.cn/mock/338/mgr/bulletin-caches', {params: {page: current, ...params }})\n            .then(({ data: { list } }) => ({ list, total: list.length }))\n        }\n        reloadList={relod => (reloadList.current = relod)}\n        action={<Button>新建</Button>}\n      />\n      <Button onClick={() => reloadList.current()}>重新加载</Button>\n    </Wrap>\n  )\n}\n\nconst Wrap = styled.div`\n  padding: 24px;\n`\n","import React from 'react';\nimport './App.css';\nimport TabeTest from '@pages/testBaseTable';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TabeTest />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}